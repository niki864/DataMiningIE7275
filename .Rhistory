subject_name <- c("John Doe", "Jane Doe","Steve Graves")
temperature <- c(98.1,99,101)
subject_name
temperature
flu_status <- c(FALSE,FALSE, TRUE)
flu_status
temperature[2]
temperature[-2]
exmp <- c(false,false,true)
gender <- factor(c("MALE","FEMALE", "MALE"))
blood <- factor(c("O","AB","A"), levels = c("A","B","AB","O"))
symptoms <- factor(c("SEVERE","MILD","MODERATE"),levels = c("MILD","MODERATE","SEVERE"),ordered = TRUE)
symptoms
blood
symptoms > "MODERATE"
symptoms >= "MODERATE"
subject1 <- list(fullname=subject_name[1], temperatureofsub=temperature[1], flu_status_sub=flu_status[1], gender_sub=gender[1], blood_sub=blood[1], symptom=symptoms[1])
subject1
subject_name <- c("John Doe", "Jane Doe","Steve Graves")
subject1[2]
subject1$flu_status_sub
pt_data<-data.frame(subject_name,temperature,flu_status,gender,blood,symptoms)
pt_data
pt_data[2:3]
pt_data[2:5]
pt_data[,]
str(housing)
housing <- read.csv("BostonHouse.csv",header=TRUE)
setwd("~/Documents/RProjects/DataMiningClassWork")
housing <- read.csv("BostonHouse.csv",header=TRUE)
peak(housing)
head(housing)
str(housing)
barplot(housing$MEDV,housing$CHAS, xlab = "average MEDV",ylab="CHAS")
barplot(housing$MEDV,housing$CHAS, ylab = "average MEDV",xlab="CHAS")
barplot(mean(housing$MEDV),housing$CHAS, ylab = "average MEDV",xlab="CHAS")
barplot(housing$MEDV,housing$CHAS, ylab = "average MEDV",xlab="CHAS")
m0 <- mean(housing$MEDV[which(housing$CHAS=0)])
m1 <- mean(housing$MEDV[which(housing$CHAS=1)])
m0 <- mean(housing$MEDV[which(housing$CHAS==0)])
m1 <- mean(housing$MEDV[which(housing$CHAS==1)])
barplot(c(m0,m1), ylab = "average MEDV",xlab="CHAS")
barplot(c(m0,m1), col = "Blue", ylab = "average MEDV",xlab="CHAS")
barplot(c(m0,m1), col = "Blue", ylab = "average MEDV",xlab="CHAS", names.arg = c("0","1"))
par(mfrow=c(2,2))
boxplot(housing$NOX[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="PTRATIO",outline = FALSE)
boxplot(housing$NOX[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="NOX",outline = FALSE)
boxplot(housing$NOX[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="NOX",outline = FALSE)
boxplot(housing$PTRATIO[which(housing$CAT..MEDV==0)],housing$PTRATIO[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="NOX",outline = FALSE)
par(mfrow=c(2,2))
boxplot(housing$NOX[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="NOX",outline = FALSE)
boxplot(housing$PTRATIO[which(housing$CAT..MEDV==0)],housing$PTRATIO[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="NOX",outline = FALSE)
par(mfrow=c(2,2))
boxplot(housing$NOX[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="NOX",outline = FALSE)
boxplot(housing$PTRATIO[which(housing$CAT..MEDV==0)],housing$PTRATIO[which(housing$CAT..MEDV==1)],names = c("0","1"),xlab="CAT..MEDV",ylab="PTRATIO",outline = FALSE)
par(mfrow=c(1,1,))
par(mfrow=c(1,1))
pairs(~CRIM+INDUS+LSTAT+MEDV, data = housing)
plot(x=housing$CRIM, y=housing$MEDV)
plot(x=housing$CRIM, y=housing$MEDV, log = "xy")
plot(housing$LSTAT[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==0)],col="blue")
#Plotting points
points(housing$LSTAT[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==0)],col="blue")
#Plotting points
points(housing$LSTAT[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==0)],col="red")
plot(housing$LSTAT[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==0)],col="blue")
#Plotting points
points(housing$LSTAT[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==0)],col="red")
plot(housing$LSTAT[which(housing$CAT..MEDV==0)],housing$NOX[which(housing$CAT..MEDV==0)],col="blue")
#Plotting points
points(housing$LSTAT[which(housing$CAT..MEDV==1)],housing$NOX[which(housing$CAT..MEDV==1)],col="red")
return((x-min(x))/(max(x)-min(x)))
#Functional Programming
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
standardize <- function(x){
return((x-mean(x))/sd(x))
}
normalize(housing$INDUS)
plot(normalize(housing$INDUS))
summary(normalize(housing$INDUS))
summary(standardize(housing$INDUS))
hist(normalize(housing$INDUS))
